<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.funny.admin.agent.dao.OrderRequestRecordDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.funny.admin.agent.entity.OrderRequestRecordEntity" id="orderRequestRecordMap">
        <result property="id" column="id"/>
        <result property="request" column="request"/>
        <result property="response" column="response"/>
        <result property="exception" column="exception"/>
        <result property="orderNo" column="order_no"/>
        <result property="createTime" column="create_time"/>
        <result property="responseTime" column="response_time"/>
    </resultMap>

	<select id="queryObject" resultType="com.funny.admin.agent.entity.OrderRequestRecordEntity">
		select
					`id`, 
					`request`,
					`response`, 
					`exception`,
					`order_no`, 
					`create_time`, 
					`response_time`
				from order_request_record where id = #{id}
        <if test="isLock != null and isLock == true">for update</if>
	</select>

	<select id="queryList" resultType="com.funny.admin.agent.entity.OrderRequestRecordEntity">
		select
		            `id`, 
		            `request`,
		            `response`, 
		            `exception`,
		            `order_no`, 
		            `create_time`, 
		            `response_time`
				from order_request_record
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from order_request_record 
	</select>

	<select id="queryTotalByOrderNo" resultType="int">
		select count(*) from order_request_record where order_no = #{value}
	</select>
	 
	<insert id="save" parameterType="com.funny.admin.agent.entity.OrderRequestRecordEntity" useGeneratedKeys="true" keyProperty="id">
		insert into order_request_record
		(
			`request`,
			`response`, 
			`exception`,
			`order_no`, 
			`create_time`, 
			`response_time`
		)
		values
		(
			#{request},
			#{response}, 
			#{exception},
			#{orderNo}, 
			#{createTime}, 
			#{responseTime}
		)
	</insert>
	 
	<update id="update" parameterType="com.funny.admin.agent.entity.OrderRequestRecordEntity">
		update order_request_record 
		<set>
			<if test="request != null">`request` = #{request}, </if>
			<if test="response != null">`response` = #{response}, </if>
			<if test="exception != null">`exception` = #{exception}, </if>
			<if test="orderNo != null">`order_no` = #{orderNo}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="responseTime != null">`response_time` = #{responseTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from order_request_record where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from order_request_record where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>