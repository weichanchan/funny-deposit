<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.funny.admin.agent.dao.OrderFromYouzanDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.funny.admin.agent.entity.OrderFromYouzanEntity" id="orderFromYouzanMap">
        <result property="id" column="id"/>
        <result property="orderNo" column="order_no"/>
        <result property="youzanOrderId" column="youzan_order_id"/>
        <result property="orderPrice" column="order_price"/>
        <result property="subOrderId" column="sub_order_id"/>
        <result property="wareNo" column="ware_no"/>
        <result property="num" column="num"/>
        <result property="status" column="status"/>
        <result property="formatInfo" column="format_info"/>
        <result property="rechargeInfo" column="recharge_info"/>
        <result property="cards" column="cards"/>
        <result property="createTime" column="create_time"/>
        <result property="beginRechargeTime" column="begin_recharge_time"/>
        <result property="lastRechargeTime" column="last_recharge_time"/>
        <result property="exception" column="exception"/>
    </resultMap>

	<select id="queryObject" resultType="com.funny.admin.agent.entity.OrderFromYouzanEntity">
		select
					`id`, 
					`order_no`, 
					`youzan_order_id`, 
					`order_price`, 
					`sub_order_id`, 
					`ware_no`,
					`num`,
					`status`,
					`format_info`, 
					`recharge_info`, 
					`cards`,
					`create_time`,
					`begin_recharge_time`, 
					`last_recharge_time`,
					`exception`
				from order_from_youzan where id = #{id}
        <if test="isLock != null and isLock == true">for update</if>
	</select>

	<select id="lockByOrderNo" resultType="com.funny.admin.agent.entity.OrderFromYouzanEntity">
			select
					`id`,
					`order_no`,
					`youzan_order_id`,
					`order_price`,
					`sub_order_id`,
					`ware_no`,
					`num`,
					`status`,
					`format_info`,
					`recharge_info`,
					`cards`,
					`create_time`,
					`begin_recharge_time`,
					`last_recharge_time`,
					`exception`
				from order_from_youzan where order_no = #{value}
				for update
	</select>

	<select id="queryList" resultType="com.funny.admin.agent.entity.OrderFromYouzanEntity">
		select
		            `id`, 
		            `order_no`, 
		            `youzan_order_id`, 
		            `order_price`, 
		            `sub_order_id`, 
		            `ware_no`, 
		            `num`,
		            `status`,
		            `format_info`, 
		            `recharge_info`, 
		            `cards`,
		            `create_time`,
		            `begin_recharge_time`, 
		            `last_recharge_time`,
					`exception`
				from order_from_youzan where 1=1
		<if test="status != null">
			and status = #{status}
		</if>
		<if test="no != null">
			and (youzan_order_id like concat('%',#{no},'%') or recharge_info like concat('%',#{no},'%'))
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from order_from_youzan where 1=1
		<if test="status != null">
			and status = #{status}
		</if>
		<if test="no != null">
			and (youzan_order_id like concat('%',#{no},'%') or recharge_info like concat('%',#{no},'%'))
		</if>
	</select>
	 
	<insert id="save" parameterType="com.funny.admin.agent.entity.OrderFromYouzanEntity" useGeneratedKeys="true" keyProperty="id">
		insert into order_from_youzan
		(
			`order_no`, 
			`youzan_order_id`, 
			`order_price`, 
			`sub_order_id`, 
			`ware_no`,
			`num`,
			`status`, 
			`format_info`, 
			`recharge_info`, 
			`cards`,
			`create_time`,
			`begin_recharge_time`, 
			`last_recharge_time`,
			`exception`
		)
		values
		(
			#{orderNo}, 
			#{youzanOrderId}, 
			#{orderPrice}, 
			#{subOrderId}, 
			#{wareNo},
			#{num},
			#{status},
			#{formatInfo}, 
			#{rechargeInfo}, 
			#{cards},
			#{createTime},
			#{beginRechargeTime}, 
			#{lastRechargeTime},
			#{exception}
		)
	</insert>
	 
	<update id="update" parameterType="com.funny.admin.agent.entity.OrderFromYouzanEntity">
		update order_from_youzan 
		<set>
			<if test="orderNo != null">`order_no` = #{orderNo}, </if>
			<if test="youzanOrderId != null">`youzan_order_id` = #{youzanOrderId}, </if>
			<if test="orderPrice != null">`order_price` = #{orderPrice}, </if>
			<if test="subOrderId != null">`sub_order_id` = #{subOrderId}, </if>
			<if test="wareNo != null">`ware_no` = #{wareNo}, </if>
			<if test="num != null">`num` = #{num}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="formatInfo != null">`format_info` = #{formatInfo}, </if>
			<if test="rechargeInfo != null">`recharge_info` = #{rechargeInfo}, </if>
			<if test="cards != null">`cards` = #{cards}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="beginRechargeTime != null">`begin_recharge_time` = #{beginRechargeTime}, </if>
			<if test="lastRechargeTime != null">`last_recharge_time` = #{lastRechargeTime},</if>
			<if test="exception != null">`exception` = #{exception}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from order_from_youzan where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from order_from_youzan where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>